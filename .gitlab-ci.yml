# -*- indent-tabs-mode: nil -*-

stages:
  - test
  - lint
  - distro_test

.test_template: &distro_test
  script:
    - rustc --version && cargo --version
    - ./autogen.sh --enable-debug
    - make check
  after_script:
    - mkdir png_artifacts
    - cp /tmp/*.png png_artifacts

  artifacts:
    when: on_failure
    paths:
      - tests/*.log
      - png_artifacts

.deb_template: &deb_deps
  before_script:
    - apt update -yqq
    - apt-get install -yqq gcc make
                  automake autoconf libtool gettext itstool
                  libgdk-pixbuf2.0-dev libgirepository1.0-dev
                  gtk-doc-tools git libgtk-3-dev rustc cargo
                  libxml2-dev libcroco3-dev libcairo2-dev libpango1.0-dev


fedora:test:
  image: fedora:latest
  stage: test
  before_script:
    - dnf install -y gcc rust rust-std-static cargo make
                     automake autoconf libtool gettext itstool
                     gtk-doc
                     git redhat-rpm-config
                     gobject-introspection-devel
                     libxml2-devel
                     libcroco-devel
                     cairo-devel
                     pango-devel
                     gdk-pixbuf2-devel
                     gtk3-devel
  <<: *distro_test


opensuse:tumbleweed:
  image: opensuse:tumbleweed
  stage: distro_test
  before_script:
    - zypper install -y gcc rust rust-std cargo make
                     automake autoconf libtool gettext itstool
                     gtk-doc
                     git
                     gobject-introspection-devel
                     libxml2-devel
                     libcroco-devel
                     cairo-devel
                     pango-devel
                     gdk-pixbuf-devel
                     gtk3-devel
  <<: *distro_test
  only:
    refs:
      - master@alatiera/librsvg
      - schedules
      - tags
      - web

debian:testing:
  image: debian:testing
  stage: distro_test
  <<: *deb_deps
  <<: *distro_test
  only:
    refs:
      - master@alatiera/librsvg
      - schedules
      - tags
      - web

# TODO: Enable this when ubuntu update it's rustc package
# https://launchpad.net/ubuntu/+source/rustc/1.23.0+dfsg1+llvm-0ubuntu2
# ubuntu:18.04:
#   image: ubuntu:18.04
#   stage: distro_test
#   <<: *deb_deps
#   <<: *distro_test
#   only:
#     refs:
#       - master
#       - schedules
#       - tags
#       - web


# Configure and run rustfmt on nightly
# Exits and builds fails if on bad format
rustfmt:
  image: "rustlang/rust:nightly"
  stage: lint
  variables:
    CFG_RELEASE_CHANNEL: "nightly"
  script:
  - rustc --version && cargo --version
  - cd rust/
  - cargo install rustfmt-nightly --force
  - cargo fmt --all -- --write-mode=diff
  when: manual


# Configure and run clippy on nightly
# Only fails on errors atm.
clippy:
  image: "rustlang/rust:nightly"
  stage: lint
  before_script:
    - apt update -yqq
    - apt-get install -yqq --no-install-recommends libgdk-pixbuf2.0-dev
                      libgirepository1.0-dev gtk-doc-tools git  libgtk-3-dev
                      libxml2-dev libcroco3-dev libcairo2-dev libpango1.0-dev

  script:
  - rustc --version && cargo --version
  - cd rust/
  - cargo install clippy --force
  - cargo clippy --all
  when: manual
